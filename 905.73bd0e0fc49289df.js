"use strict";(self.webpackChunktoggl_overhours=self.webpackChunktoggl_overhours||[]).push([[905],{1905:(D,u,s)=>{s.r(u);var o=s(5861),c=s(2603),h=s(1288),g=s(6420),b=s(9671),m=s(3754);const{INVALID:F,GONE:p,SYNTAX:w,DISALLOWED:z}=m.errors;class v{constructor(e,i,r,t){this.fileHandle=e,this.writer=r,this.file=t?i:new File([],i.name,i),this.size=t?i.size:0,this.position=0}write(e){var i=this;return(0,o.Z)(function*(){try{yield i.fileHandle.getFile()}catch{throw new DOMException(...p)}let r=i.file;if((0,m.isChunkObject)(e))if("write"===e.type){if("number"==typeof e.position&&e.position>=0&&(i.position=e.position,i.size<e.position&&(i.file=new File([i.file,new ArrayBuffer(e.position-i.size)],i.file.name,i.file))),!("data"in e))throw new DOMException(...w("write requires a data argument"));e=e.data}else{if("seek"===e.type){if(Number.isInteger(e.position)&&e.position>=0){if(i.size<e.position)throw new DOMException(...F);return void(i.position=e.position)}throw new DOMException(...w("seek requires a position argument"))}if("truncate"===e.type){if(Number.isInteger(e.size)&&e.size>=0)return r=e.size<i.size?new File([r.slice(0,e.size)],r.name,r):new File([r,new Uint8Array(e.size-i.size)],r.name,r),i.size=r.size,i.position>r.size&&(i.position=r.size),void(i.file=r);throw new DOMException(...w("truncate requires a size argument"))}}e=new Blob([e]);let t=i.file;const n=t.slice(0,i.position),a=t.slice(i.position+e.size);let y=i.position-n.size;y<0&&(y=0),t=new File([n,new Uint8Array(y),e,a],t.name),i.size=t.size,i.position+=e.size,i.file=t})()}close(){var e=this;return(0,o.Z)(function*(){try{yield e.fileHandle.getFile()}catch{throw new DOMException(...p)}const i=yield new Promise((r,t)=>{const n=new FileReader;n.onload=()=>r(n.result),n.onerror=t,n.readAsArrayBuffer(e.file)});e.file=new File([i],e.file.name,e.file),yield new Promise((r,t)=>{e.writer.onwriteend=r,e.writer.onerror=t,e.writer.truncate(0)}),yield new Promise((r,t)=>{e.writer.onwriteend=r,e.writer.onerror=t,e.writer.write(e.file)}),e.writer.onwriteend=null,e.writer.onerror=null,e.file=e.position=e.size=null})()}}class d{constructor(e,i=!0){this.kind="file",this.readable=!0,this.file=e,this.writable=i}get name(){return this.file.name}isSameEntry(e){var i=this;return(0,o.Z)(function*(){return i.file.toURL()===e.file.toURL()})()}getFile(){return new Promise(this.file.file.bind(this.file))}createWritable(e){var i=this;return(0,o.Z)(function*(){if(!i.writable)throw new DOMException(...z);const r=yield i.getFile();return new Promise((t,n)=>i.file.createWriter(a=>{t(new v(i,r,a,!!e.keepExistingData))},n))})()}}class f{constructor(e,i=!0){this.kind="directory",this.readable=!0,this.dir=e,this.writable=i,this.name=e.name}isSameEntry(e){var i=this;return(0,o.Z)(function*(){return i.dir.fullPath===e.dir.fullPath})()}entries(){var e=this;return(0,b.Z)(function*(){const i=e.dir.createReader(),r=yield(0,g.Z)(new Promise(i.readEntries.bind(i)));for(const t of r)yield[t.name,t.isFile?new d(t,e.writable):new f(t,e.writable)]})()}getDirectoryHandle(e,i={}){return new Promise((r,t)=>{this.dir.getDirectory(e,i,n=>{r(new f(n))},t)})}getFileHandle(e,i={}){return new Promise((r,t)=>this.dir.getFile(e,i,n=>r(new d(n)),t))}removeEntry(e,i){var r=this;return(0,o.Z)(function*(){let t;try{t=yield r.getDirectoryHandle(e)}catch(n){if("TypeMismatchError"!==n.name)throw n;t=yield r.getFileHandle(e)}return new Promise((n,a)=>{t instanceof f?i?.recursive?t.dir.removeRecursively(()=>n(),a):t.dir.remove(()=>n(),a):t.file&&t.file.remove(()=>n(),a)})})()}}globalThis.DataTransferItem&&!globalThis.DataTransferItem.prototype.getAsFileSystemHandle&&globalThis.DataTransferItem.prototype.webkitGetAsEntry&&(globalThis.DataTransferItem.prototype.getAsFileSystemHandle=(0,o.Z)(function*(){const l=this.webkitGetAsEntry();return l.isFile?new h.FileSystemFileHandle(new d(l,!1)):new c.FileSystemDirectoryHandle(new f(l,!1))}))}}]);